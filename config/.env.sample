# CCM Python Variables

# Django Secret key. Run the command below to generate and insert this.
# You should set this to production but the start script generates one each time if not set

# python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
# DJANGO_SECRET_KEY=<some secret key, randomized by default>
# Django log level
DJANGO_LOG_LEVEL=INFO

# Root Log Level
ROOT_LOG_LEVEL=INFO
DEBUG=True

# For local debugging, not yet implemented. Sets Gunicorn to reload with 1 worker
DEBUGPY_ENABLE=True
DEBUGPY_REMOTE_ADDRESS=0.0.0.0
DEBUGPY_REMOTE_PORT=5678

ALLOWED_HOSTS=.ngrok.io,.localhost,127.0.0.1,.loophole.site,0.0.0.0

# A comma separated list of domains where you want to allow the application to be framed
CSP_FRAME_ANCESTORS=https://canvas-test.it.umich.edu
CSP_SCRIPT_SRC=*.google-analytics.com,*.analytics.google.com,*.googletagmanager.com,cdn.cookielaw.org,*.onetrust.com,portal-infoassure.it.umich.edu,cdn.jsdelivr.net,cdnjs.cloudflare.com

# You need to set this to true if you're testing with ngrok or on production
# Sets some cookie values to expect HTTPS
# If this is not set some things won't work (like logins and LTI)
CSRF_COOKIE_SECURE=True

HELP_URL=https://ccm.tl-pages.tl.it.umich.edu

GOOGLE_ANALYTICS_ID=
# OneTrust domain for cookie consent
ONE_TRUST_DOMAIN=
# "Privacy Policy" link in OneTrust banner
PRIVACY_URL=https://umich.edu/about/privacy/

# Redis settings
REDIS_LOCATION=redis://ccm_redis:6379

# (optional) The token for accessing the /status URL; leaving it undefined means the route is unprotected
# DJANGO_WATCHMAN_TOKENS=
# (optional) The name of the header or parameter used for passing the above token
# DJANGO_WATCHMAN_TOKEN_NAME=ccm-watchman-token

# Canvas Oauth configuration

# (required) The client id is the integer client id value of your Canvas developer key.
CANVAS_OAUTH_CLIENT_ID=

# (required) The client secret is the random string (secret) value of your Canvas developer key.
CANVAS_OAUTH_CLIENT_SECRET=

# (required) The domain of your canvas instance without https:// (e.g. canvas.instructure.com)
CANVAS_OAUTH_CANVAS_DOMAIN=

#(optional) The Canvas API scopes needed by the application
# (This should only be used if Canvas changes the scopes from what is in the source code in backend/canvas_scopes.py.)
# CANVAS_OAUTH_SCOPES=
